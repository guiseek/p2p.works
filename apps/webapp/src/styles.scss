@use '~@angular/material' as mat;

@import './theming/typografy';

// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$works-primary: mat.define-palette(mat.$purple-palette);
$works-accent: mat.define-palette(mat.$cyan-palette);
// The warn palette is optional (defaults to red).
$works-warn: mat.define-palette(mat.$red-palette);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$works-theme: mat.define-light-theme(
  (
    color: (
      primary: $works-primary,
      accent: $works-accent,
      warn: $works-warn,
    ),
  )
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include mat.all-component-themes($works-theme);
@include mat.core-theme($works-theme);
@include mat.icon-theme($works-theme);
@include mat.card-theme($works-theme);
@include mat.input-theme($works-theme);
@include mat.dialog-theme($works-theme);
@include mat.button-theme($works-theme);
@include mat.select-theme($works-theme);
@include mat.form-field-theme($works-theme);

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Montserrat,sans-serif;
}

.mat-form-field {
  width: 100%;
}
